buildscript {

    repositories {
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.9"
    }
}

allprojects {

    repositories {
        mavenLocal()
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR3"
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
        }
    }


    jar {
        version = "$version"
    }

    if (it.name.endsWith("-api")) {
        dependencies {
            compile "org.springframework.boot:spring-boot-starter-web"
        }
    }

    if (it.name.endsWith("-impl") || it.name == "api-gateway" || it.name == "config-server" || it.name == "eureka-server") {

        apply plugin: 'org.springframework.boot'

        dependencies {
            testCompile "junit:junit:${junitVersion}"
            testCompile 'org.springframework.boot:spring-boot-starter-test'
        }
    }

    if (it.name.endsWith("-impl") || it.name.endsWith("-api")) {
        apply plugin: "net.ltgt.apt"
        apply from: "$rootDir/gradle/lombok.gradle"
    }

    if (it.name.endsWith("-impl")) {
        apply from: "$rootDir/gradle/mapstruct.gradle"
        dependencies {

            compile 'org.springframework.cloud:spring-cloud-starter-config'
            compile 'org.springframework.cloud:spring-cloud-starter-eureka'
            compile 'org.springframework.cloud:spring-cloud-starter-hystrix'
            compile 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
            compile 'org.springframework.boot:spring-boot-starter-actuator'

            compile 'org.springframework.cloud:spring-cloud-starter-oauth2'
            compile 'org.springframework.boot:spring-boot-starter-redis'
            compile "org.springframework.boot:spring-boot-devtools"

            compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:${springBootMybatisVersion}"
            compile 'com.zaxxer:HikariCP'
            compile "mysql:mysql-connector-java:${mysqlVersion}"
        }
    }

    if(it.name.endsWith("-client")) {
        dependencies {
            compile 'org.springframework.cloud:spring-cloud-starter-feign'
        }
    }
}

